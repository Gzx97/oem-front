{"version":3,"sources":["pages/login/Register.js"],"names":["Register","inject","observer","state","regtype","account_token","nickname","preAccount","account","code","imgCode","password","passwordConfirm","recommendCode","showCaptchaPng","pwType","pwConfirmType","imgSrc","captcha","undefined","captchaKey","Date","count","COUNT_DOWN","isGetSms","showBtn","isSubmit","isSuccessToast","canGetCode","canSubmit","_this2$state","_this2","onInputChange","e","key","value","target","setState","Object","C_Users_15691_Desktop_gzxProject_oem_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","onAccountBlur","_this","C_Users_15691_Desktop_gzxProject_oem_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_11__","_this2$state2","REGISTER","props","localeStore","locale","isMobile","isEmail","antd_mobile_lib_toast__WEBPACK_IMPORTED_MODULE_5___default","a","info","PLEASE_RIGHT_EMAIL","PLEASE_RIGHT_PHONE","onNickBlur","isNickName","codeCountDown","timer","setInterval","clearInterval","getCode","_callee","userM4DStore","_this2$state3","C_Users_15691_Desktop_gzxProject_oem_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","wrap","_context","prev","next","abrupt","type","then","res","status","msg","stop","onSetType","currentType","onSubmit","_this2$props","history","_this2$state4","REG","PASSWORD","test","register","usertype","email","phone","recommend_code","user_name","REGISTER_SUCESS","push","catch","PASSWORD_LEAST","checkReg","this","match","console","log","window","location","search","split","onresize","_this3","_this$state","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","id","_components_partial_AccountHeader__WEBPACK_IMPORTED_MODULE_29__","className","ZCXZH","HYZC","onClick","PHONE_REGISTER","EMAIL_REGISTER","src","userIcon","placeholder","YHM","onBlur","onChange","telIcon","emailIcon","PHONE_NUM","EMAIL_NUM","yanzhengIcon","maxLength","YANZHENGMA","style","opacity","concat","HQ_YANZHENGMA","passwordIcon","PLEASE_PASSWORD","openPwdImg","closePwdImg","alt","yaoqingIcon","YQM","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","activeClassName","disabled","NOW_REGISTER","HAD_ZHANGHAO","HAD_ZHANGHAO2","Component"],"mappings":"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","file":"static/js/82.2e7030b5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Toast, Icon } from 'antd-mobile'\r\nimport { inject, observer } from 'mobx-react'\r\nimport Cookies from \"js-cookie\"\r\nimport { UserApi } from '../../api'\r\nimport { REG, TOAST_DURATION, COUNT_DOWN } from '../../utils/constants'\r\nimport { isEmail, isMobile, isNickName } from \"../../utils/reg\"\r\nimport { compatibleFixedButton, getQueryParam } from '../../utils/common'\r\n// import CaptchaM4D from '../../components/common/CaptchaM4D'\r\nimport openPwdImg from '../../assets/images/open-pwd-shen.png'\r\nimport closePwdImg from '../../assets/images/close-pwd-shen.png'\r\nimport userIcon from '../../assets/images/imeta/login/user.png'\r\nimport yanzhengIcon from '../../assets/images/imeta/login/yanzheng.png'\r\nimport telIcon from '../../assets/images/imeta/login/tel.png'\r\nimport passwordIcon from '../../assets/images/imeta/login/password.png'\r\nimport yaoqingIcon from '../../assets/images/imeta/login/yaoqing.png'\r\nimport emailIcon from '../../assets/images/imeta/login/email.png'\r\n\r\nimport './Register.scss'\r\nimport AccountHeader from \"../../components/partial/AccountHeader\";\r\n// import AccountLangHeader from \"../../components/partial/AccountLangHeader\";\r\n\r\nimport { Link } from 'react-router-dom'\r\n@inject('userM4DStore')\r\n@inject('localeStore')\r\n@observer\r\nclass Register extends Component {\r\n  state = {\r\n    regtype: 'phone',\r\n    account_token: '',\r\n    nickname: '',//昵称\r\n    preAccount: '',\r\n    account: '',\r\n    code: '',\r\n    imgCode: '',//给个默认值\r\n    password: '',\r\n    passwordConfirm: '',\r\n    recommendCode: '',\r\n    showCaptchaPng: false,\r\n    pwType: 'password',\r\n    pwConfirmType: 'password',\r\n    imgSrc: '',\r\n    captcha: undefined,\r\n    captchaKey: +new Date(),\r\n    count: COUNT_DOWN,\r\n    isGetSms: true,\r\n    showBtn: true,\r\n    isSubmit: true,\r\n    isSuccessToast: false,//注册成功当Toast\r\n    // tel_num: '',//国家号\r\n    canGetCode: true,//获取验证码防止重复\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const recommendCode = getQueryParam('recommendCode') || ''\r\n    const { match } = this.props;\r\n\r\n    // this.getCaptchaPng()\r\n    console.log(window.location.search.split(\"=\")[1])\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.onresize = null\r\n  }\r\n\r\n  // getCaptchaPng = () => {\r\n  //   const key = +new Date()\r\n  //   UserApi.getCaptchaPng({ key }).then(res => {\r\n  //     this.setState({ captchaKey: key, imgSrc: res })\r\n  //   })\r\n  // }\r\n\r\n  canSubmit = () => {\r\n    const { account, code, password, passwordConfirm, nickname } = this.state\r\n    return !!(account && code && password && nickname )\r\n  }\r\n\r\n  onInputChange = (e, key) => {\r\n    const { value } = e.target\r\n    // console.log(ke注册时候取消确认密码功能y)\r\n    // \r\n    // if (key === 'password') {\r\n    //   // console.log(key)\r\n    //   this.setState({\r\n    //     passwordConfirm: value\r\n    //   })\r\n    // }\r\n\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  onAccountBlur = e => {\r\n    let _this = this\r\n    const { value } = e.target\r\n    const { canGetCode, preAccount, account, regtype } = this.state\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    if (value !== preAccount) {\r\n      this.setState({ preAccount: value })\r\n      // this.getCaptchaPng()\r\n    }\r\n\r\n    if (regtype === 'phone') {\r\n      if (!isMobile(account)) {\r\n        Toast.info(REGISTER.PLEASE_RIGHT_PHONE, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    if (regtype === 'email') {\r\n      if (!isEmail(account)) {\r\n        Toast.info(REGISTER.PLEASE_RIGHT_EMAIL, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  onNickBlur = e => {//昵称验证\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n\r\n    let _this = this\r\n    const { value } = e.target\r\n    if (!isNickName(value)) {\r\n      this.setState({\r\n        nickname: ''\r\n      }, () => {\r\n        Toast.info('昵称不规范', 2)\r\n      })\r\n      return\r\n    }\r\n    // UserApi.usernameexist({ user_name: value }).then(res => {\r\n    //   if (res.status !== 1) {\r\n    //     Toast.info(res.msg, 2)\r\n    //     _this.setState({\r\n    //       nickname: ''\r\n    //     })\r\n    //   }\r\n\r\n    // })\r\n\r\n  }\r\n  codeCountDown = () => {\r\n    let count = this.state.count\r\n\r\n    this.timer = setInterval(() => {\r\n      if (count <= 0) {\r\n        this.setState({ isGetSms: true, count: COUNT_DOWN })\r\n        this.setState({ canGetCode: true })\r\n        clearInterval(this.timer)\r\n      } else {\r\n        this.setState({ isGetSms: false, count: count-- })\r\n      }\r\n    }, 1000)\r\n  }\r\n  // 获取验证码\r\n  getCode = async () => {\r\n    const { userM4DStore } = this.props;\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    let _this = this\r\n    const { canGetCode, account, captcha, imgCode, regtype } = this.state\r\n    await _this.setState({ canGetCode: false })\r\n    if (!canGetCode) {\r\n      // console.log('正在获取')\r\n      return\r\n    }\r\n    if (regtype === 'phone') {\r\n      if (!isMobile(account)) {\r\n        Toast.info(REGISTER.PLEASE_RIGHT_PHONE, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    if (regtype === 'email') {\r\n      if (!isEmail(account)) {\r\n        Toast.info(REGISTER.PLEASE_RIGHT_EMAIL, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    // if (!captcha) {\r\n    //   Toast.info(REGISTER.PLEASE_YANZHENGMA, 1)\r\n    //   _this.setState({ canGetCode: true })\r\n    //   return\r\n    // }\r\n    userM4DStore.getCode({\r\n      // captcha,\r\n      account,\r\n      // prefix: tel_num,\r\n      type: 'reg'\r\n    }).then(res => {\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg)\r\n        // this.getCaptchaPng()\r\n        _this.setState({ canGetCode: true })\r\n        // _this.setState({ isSubmit: true, code: '', captcha: '' })\r\n        return\r\n      }\r\n      this.codeCountDown()//开启计时\r\n    })\r\n  }\r\n\r\n  onSetType = (currentType, key) => {\r\n    const type = currentType === 'password' ? 'text' : 'password'\r\n    this.setState({ [key]: type })\r\n  }\r\n\r\n  onSubmit = () => {\r\n\r\n    const { userM4DStore, history } = this.props;\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    const {\r\n      account,\r\n      code,\r\n      password,\r\n      passwordConfirm,\r\n      nickname,\r\n      recommendCode,\r\n      regtype,\r\n    } = this.state;\r\n\r\n    // if (!REG.EMAIL.test(account) && !REG.MOBILE.test(account)) {\r\n    //   Toast.info(REGISTER.NUM_ERROR, 2)\r\n    //   return\r\n    // }\r\n    if (!REG.PASSWORD.test(password)) {\r\n      Toast.info(REGISTER.PASSWORD_LEAST, 2)\r\n      return\r\n    }\r\n    // if (password !== passwordConfirm) {\r\n    //   Toast.info(REGISTER.PASSWORD_NOSAME, 2)\r\n    //   return\r\n    // }\r\n    this.setState({ isSubmit: false })\r\n\r\n    userM4DStore.register({\r\n      // type: isMobile(account) ? 'phone' : 'email',\r\n      usertype: regtype,\r\n      email: isEmail(account) ? account : null,\r\n      phone: isMobile(account) ? account : null,\r\n      // phone_prefix: isMobile(account) ? tel_num : null,\r\n      code,\r\n      password,\r\n      // passwordConfirm,\r\n      recommend_code: recommendCode,\r\n      user_name: nickname\r\n    }).then(res => {\r\n      this.setState({ isSubmit: true })\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg, 2)\r\n        this.setState({ isSubmit: true, code: '', captcha: '' })\r\n        // this.getCaptchaPng()\r\n        return\r\n      }\r\n      Toast.info(REGISTER.REGISTER_SUCESS, 2, () => { history.push('/login') })\r\n\r\n    }).catch(() => this.setState({ isSubmit: true }))\r\n  }\r\n  checkReg = (regtype) => {\r\n    this.setState({\r\n      regtype\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    const {\r\n      nickname,\r\n      account,//手机号或者邮箱\r\n      code,//手机验证码\r\n      password,\r\n      passwordConfirm,//确认密码\r\n      recommendCode,//邀请码\r\n      pwType,\r\n      pwConfirmType,\r\n      captcha,\r\n      imgSrc,\r\n      count,\r\n      isGetSms,\r\n      // showSuccess,\r\n      // showBtn,\r\n      isSubmit,\r\n      canGetCode,\r\n      regtype,\r\n    } = this.state\r\n\r\n    return (\r\n      <div id=\"register\">\r\n        {/* <AccountLangHeader haveimg={true}/> */}\r\n        <AccountHeader/>\r\n        <div className='log_head'>\r\n          <h1>{REGISTER.ZCXZH}</h1>\r\n          <p>{REGISTER.HYZC}</p>\r\n        </div>\r\n        <div className='reg_type_box'>\r\n          <span\r\n            onClick={() => { this.checkReg('phone') }}\r\n            className={regtype === 'phone' && 'active' || 'no_active'}>{REGISTER.PHONE_REGISTER}</span>\r\n          <span\r\n            onClick={() => { this.checkReg('email') }}\r\n            className={regtype === 'phone' && 'no_active' || 'active'}>{REGISTER.EMAIL_REGISTER}</span>\r\n        </div>\r\n\r\n        <div className='out_box'>\r\n          <div className=\"main-content\">\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={userIcon} />\r\n\r\n                <input\r\n                  className={'input-main'}\r\n                  type=\"text\"\r\n                  value={nickname}\r\n                  placeholder={REGISTER.YHM}\r\n                  onBlur={e => this.onNickBlur(e)}//失去焦点刷新验证码\r\n                  onChange={e => this.onInputChange(e, 'nickname')}\r\n                />\r\n              </div>\r\n\r\n\r\n            </label>\r\n\r\n\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={regtype === 'phone' && telIcon || emailIcon} />\r\n\r\n                <input\r\n                  className={'input-main'}\r\n                  type=\"text\"\r\n                  value={account}\r\n                  placeholder={regtype === 'phone' && REGISTER.PHONE_NUM || REGISTER.EMAIL_NUM}\r\n                  onBlur={this.onAccountBlur}//失去焦点\r\n                  onChange={e => this.onInputChange(e, 'account')}\r\n                />\r\n              </div>\r\n            </label>\r\n\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={yanzhengIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type=\"text\"\r\n                  maxLength={6}\r\n                  // placeholder={regtype === 'phone' && '短信验证码' || '邮箱验证码'}\r\n                  placeholder={REGISTER.YANZHENGMA}\r\n                  value={code}\r\n                  onChange={e => this.onInputChange(e, 'code')}\r\n                />\r\n              </div>\r\n\r\n              <span\r\n                style={!canGetCode && isGetSms && { opacity: '.5' } || {}}\r\n                className={`sms-code  ${!isGetSms ? `event-none` : ''}`}\r\n                onClick={this.getCode}>\r\n                {isGetSms ? REGISTER.HQ_YANZHENGMA : <span>{`${count}s`}</span>}\r\n              </span>\r\n            </label>\r\n\r\n            {/* 密码 */}\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwType}\r\n                  value={password}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD}\r\n                  onChange={e => this.onInputChange(e, 'password')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwType, 'pwType')}\r\n              />\r\n            </label>\r\n            {/* 邀请码 */}\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={yaoqingIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type=\"text\"\r\n                  value={recommendCode}\r\n                  placeholder={REGISTER.YQM+'（非必填）'}\r\n                  onChange={e => this.onInputChange(e, 'recommendCode')}\r\n                />\r\n              </div>\r\n\r\n            </label>\r\n            {/* <label>\r\n                <div className='input-box'>\r\n                  <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                  <input\r\n                    className=\"input-main\"\r\n                    type={pwConfirmType}\r\n                    value={passwordConfirm}\r\n                    placeholder={REGISTER.PLEASE_PASSWORD2}\r\n                    onChange={e => this.onInputChange(e, 'passwordConfirm')}\r\n                  />\r\n                </div>\r\n\r\n                <img\r\n                  className=\"eye-img\"\r\n                  src={pwConfirmType === 'text' ? openPwdImg : closePwdImg}\r\n                  alt=\"睁眼闭眼\"\r\n                  onClick={() => this.onSetType(pwConfirmType, 'pwConfirmType')}\r\n                />\r\n              </label> */}\r\n\r\n\r\n          </div>\r\n          {/* <p style={{ fontWeight: '400' }}>{REGISTER.TISHI}</p> */}\r\n          <div className=\"btn-box\">\r\n            <Button\r\n              activeClassName=\"active\"\r\n              className=\"primary-button\"\r\n              disabled={!this.canSubmit() || !isSubmit}\r\n              // onClick={() => { this.props.history.push('/LookKey') }}>\r\n              onClick={this.onSubmit}>\r\n              {REGISTER.NOW_REGISTER}\r\n            </Button>\r\n          </div>\r\n          <div className='to_log'>\r\n            {REGISTER.HAD_ZHANGHAO} <span onClick={() => { history.push('/login') }}>{REGISTER.HAD_ZHANGHAO2}</span>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n"],"sourceRoot":""}