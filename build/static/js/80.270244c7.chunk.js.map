{"version":3,"sources":["pages/login/PasswordNew.js"],"names":["PasswordNew","inject","observer","state","regtype","account_token","step","agree","nickname","preAccount","account","code","imgCode","password","passwordConfirm","recommendCode","showCaptchaPng","pwType","pwConfirmType","imgSrc","captcha","undefined","captchaKey","Date","count","COUNT_DOWN","isGetSms","showBtn","isSubmit","isSuccessToast","regType","tel_num","canGetCode","canSubmit","_this2$state","_this2","onInputChange","e","key","value","target","setState","Object","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","onAccountBlur","_this","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_11__","_this2$state2","PASSWORD","props","localeStore","locale","isMobile","isEmail","antd_mobile_lib_toast__WEBPACK_IMPORTED_MODULE_5___default","a","info","PLEASE_RIGHT_NUMBER","codeCountDown","timer","setInterval","clearInterval","getCode","_callee","userM4DStore","_this2$props$localeSt","_this2$state3","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","wrap","_context","prev","next","REGISTER","abrupt","type","then","res","status","msg","stop","onSetType","currentType","onSubmit","_this2$props","history","_this2$state4","REG","EMAIL","test","MOBILE","UserApi","findPassword","usertype","email","phone","push","catch","PASSWORD_NOSAME","PASSWORD_LEAST","NUM_ERROR","checkReg","this","match","window","onresize","_this3","_this$props$localeSto","_this$state","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","id","_components_partial_AccountHeader__WEBPACK_IMPORTED_MODULE_28__","className","ZHAOHUI_PASSWORD","TIPS","onClick","PHONE_NUM","EMAIL_NUM","src","telIcon","emailIcon","placeholder","onBlur","onChange","yanzhengIcon","maxLength","PLEASE_YZM","style","opacity","concat","HQ_YANZHENGMA","passwordIcon","PLEASE_PASSWORD","openPwdImg","closePwdImg","alt","PLEASE_PASSWORD2","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","activeClassName","disabled","OK","Component"],"mappings":"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","file":"static/js/80.270244c7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Toast, Icon } from 'antd-mobile'\r\nimport { inject, observer } from 'mobx-react'\r\nimport Cookies from \"js-cookie\"\r\nimport { UserApi } from '../../api'\r\nimport { REG, TOAST_DURATION, COUNT_DOWN } from '../../utils/constants'\r\nimport { isEmail, isMobile, isNickName } from \"../../utils/reg\"\r\n// import { compatibleFixedButton, getQueryParam } from '../../utils/common'\r\n// import CaptchaM4D from '../../components/common/CaptchaM4D'\r\nimport openPwdImg from '../../assets/images/open-pwd-shen.png'\r\nimport closePwdImg from '../../assets/images/close-pwd-shen.png'\r\nimport userIcon from '../../assets/images/imeta/login/user.png'\r\nimport yanzhengIcon from '../../assets/images/imeta/login/yanzheng.png'\r\nimport telIcon from '../../assets/images/imeta/login/tel.png'\r\nimport passwordIcon from '../../assets/images/imeta/login/password.png'\r\nimport yaoqingIcon from '../../assets/images/imeta/login/yaoqing.png'\r\nimport emailIcon from '../../assets/images/imeta/login/email.png'\r\n\r\nimport './PasswordNew.scss'\r\nimport AccountHeader from \"../../components/partial/AccountHeader\";\r\nimport { Link } from 'react-router-dom'\r\n@inject('userM4DStore')\r\n@inject('localeStore')\r\n@observer\r\nclass PasswordNew extends Component {\r\n  state = {\r\n    regtype: 'phone',\r\n    account_token: '',\r\n    step: 1,//创建钱包步骤\r\n    agree: false,//阅读并同意\r\n    nickname: '',//昵称\r\n    preAccount: '',\r\n    account: '',\r\n    code: '',\r\n    imgCode: '',//给个默认值\r\n    password: '',\r\n    passwordConfirm: '',\r\n    recommendCode: '',\r\n    showCaptchaPng: false,\r\n    pwType: 'password',\r\n    pwConfirmType: 'password',\r\n    imgSrc: '',\r\n    captcha: undefined,\r\n    captchaKey: +new Date(),\r\n    count: COUNT_DOWN,\r\n    isGetSms: true,\r\n    showBtn: true,\r\n    isSubmit: true,\r\n    isSuccessToast: false,//注册成功当Toast\r\n    regType: 'email',//注册方式\r\n    tel_num: '',//国家号\r\n    canGetCode: true,//获取验证码防止重复\r\n  }\r\n\r\n  componentDidMount() {\r\n    // const recommendCode = getQueryParam('recommendCode') || ''\r\n    const { match } = this.props;\r\n    // this.setState({\r\n    //   tel_num: Cookies.get('TEL_NUM') && Cookies.get('TEL_NUM') || '86'\r\n    // })\r\n    // this.getCaptchaPng()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.onresize = null\r\n  }\r\n\r\n  // getCaptchaPng = () => {\r\n  //   const key = +new Date()\r\n  //   UserApi.getCaptchaPng({ key }).then(res => {\r\n  //     this.setState({ captchaKey: key, imgSrc: res })\r\n  //   })\r\n  // }\r\n\r\n  canSubmit = () => {\r\n    const { account, code, password, passwordConfirm, nickname } = this.state\r\n    return !!(account && code && password && passwordConfirm)\r\n  }\r\n\r\n  onInputChange = (e, key) => {\r\n    const { value } = e.target\r\n    // console.log(ke注册时候取消确认密码功能y)\r\n    // \r\n    // if (key === 'password') {\r\n    //   // console.log(key)\r\n    //   this.setState({\r\n    //     passwordConfirm: value\r\n    //   })\r\n    // }\r\n\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  onAccountBlur = e => {\r\n    let _this = this\r\n    const { value } = e.target\r\n    const { canGetCode, preAccount, account, regtype } = this.state\r\n    const { localeStore: { locale: { PASSWORD } } } = this.props;\r\n    if (value !== preAccount) {\r\n      this.setState({ preAccount: value })\r\n      // this.getCaptchaPng()\r\n    }\r\n\r\n    \r\n    if (regtype === 'phone') {\r\n      if (!isMobile(account)) {\r\n        Toast.info(PASSWORD.PLEASE_RIGHT_NUMBER, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    if (regtype === 'email') {\r\n      if (!isEmail(account)) {\r\n        Toast.info(PASSWORD.PLEASE_RIGHT_NUMBER, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n\r\n   \r\n\r\n  }\r\n\r\n  codeCountDown = () => {\r\n    let count = this.state.count\r\n\r\n    this.timer = setInterval(() => {\r\n      if (count <= 0) {\r\n        this.setState({ isGetSms: true, count: COUNT_DOWN })\r\n        this.setState({ canGetCode: true })\r\n        clearInterval(this.timer)\r\n      } else {\r\n        this.setState({ isGetSms: false, count: count-- })\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  getCode = async () => {\r\n    const { userM4DStore } = this.props;\r\n    const { localeStore: { locale: { REGISTER,PASSWORD} } } = this.props;\r\n    let _this = this\r\n    const { canGetCode, account, captcha, imgCode, regtype } = this.state\r\n    await _this.setState({ canGetCode: false })\r\n    if (!canGetCode) {\r\n      // console.log('正在获取')\r\n      return\r\n    }\r\n    if (regtype === 'phone') {\r\n      if (!isMobile(account)) {\r\n        Toast.info(PASSWORD.PLEASE_RIGHT_NUMBER, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    if (regtype === 'email') {\r\n      if (!isEmail(account)) {\r\n        Toast.info(PASSWORD.PLEASE_RIGHT_NUMBER, 1)\r\n        _this.setState({ canGetCode: true })\r\n        return\r\n      }\r\n    }\r\n    userM4DStore.getCode({\r\n      account,\r\n      type: 'findpassword '\r\n    }).then(res => {\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg)\r\n        // this.getCaptchaPng()\r\n        _this.setState({ canGetCode: true })\r\n        // _this.setState({ isSubmit: true, code: '', captcha: '' })\r\n        return\r\n      }\r\n      this.codeCountDown()//开启计时\r\n    })\r\n  }\r\n\r\n  onSetType = (currentType, key) => {\r\n    const type = currentType === 'password' ? 'text' : 'password'\r\n    this.setState({ [key]: type })\r\n  }\r\n\r\n  onSubmit = () => {\r\n\r\n    const { userM4DStore, history } = this.props;\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    const {\r\n      account,\r\n      code,\r\n      password,\r\n      passwordConfirm,\r\n      regtype,\r\n    } = this.state;\r\n    if (!REG.EMAIL.test(account) && !REG.MOBILE.test(account)) {\r\n      Toast.info(REGISTER.NUM_ERROR, 2)\r\n      return\r\n    }\r\n    if (!REG.PASSWORD.test(password)) {\r\n      Toast.info(REGISTER.PASSWORD_LEAST, 2)\r\n      return\r\n    }\r\n    if (password !== passwordConfirm) {\r\n      Toast.info(REGISTER.PASSWORD_NOSAME, 2)\r\n      return\r\n    }\r\n    this.setState({ isSubmit: false })\r\n\r\n    UserApi.findPassword({\r\n      usertype: regtype,\r\n      email: isEmail(account) ? account : null,\r\n      phone: isMobile(account) ? account : null,\r\n      code,\r\n      password,\r\n      passwordConfirm,\r\n      // recommend_code: recommendCode\r\n    }).then(res => {\r\n      this.setState({ isSubmit: true })\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg, 2)\r\n        this.setState({ isSubmit: true, code: '', captcha: '' })\r\n        // this.getCaptchaPng()\r\n        return\r\n      }\r\n      Toast.info(res.msg, 2, () => { history.push('/login') })\r\n    }).catch(() => this.setState({ isSubmit: true }))\r\n  }\r\n  checkReg = (regtype) => {\r\n    this.setState({\r\n      regtype\r\n    })\r\n  }\r\n  render() {\r\n    const { history } = this.props;\r\n    const { localeStore: { locale: { REGISTER,PASSWORD } } } = this.props;\r\n    const {\r\n      account,//手机号或者邮箱\r\n      code,//手机验证码\r\n      password,\r\n      passwordConfirm,//确认密码\r\n      pwType,\r\n      pwConfirmType,\r\n      count,\r\n      isGetSms,\r\n      // showSuccess,\r\n      // showBtn,\r\n      isSubmit,\r\n      regtype,//注册方式\r\n      canGetCode,\r\n    } = this.state\r\n\r\n    return (\r\n      <div id=\"password\">\r\n        {/* <AccountLangHeader/> */}\r\n        <AccountHeader />\r\n        <div className='log_head'>\r\n          <h1>{PASSWORD.ZHAOHUI_PASSWORD}</h1>\r\n          <p>{PASSWORD.TIPS}</p>\r\n        </div>\r\n        <div className='reg_type_box'>\r\n          <span\r\n            onClick={() => { this.checkReg('phone') }}\r\n            className={regtype === 'phone' && 'active' || 'no_active'}>{PASSWORD.PHONE_NUM}</span>\r\n          <span\r\n            onClick={() => { this.checkReg('email') }}\r\n            className={regtype === 'phone' && 'no_active' || 'active'}>{PASSWORD.EMAIL_NUM}</span>\r\n        </div>\r\n\r\n        <div className='out_box'>\r\n          <div className=\"main-content\">\r\n\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={regtype === 'phone' && telIcon || emailIcon} />\r\n\r\n                <input\r\n                  className={'input-main'}\r\n                  type=\"text\"\r\n                  value={account}\r\n                  placeholder={regtype === 'phone' && PASSWORD.PHONE_NUM || PASSWORD.EMAIL_NUM}\r\n                  onBlur={this.onAccountBlur}//失去焦点\r\n                  onChange={e => this.onInputChange(e, 'account')}\r\n                />\r\n              </div>\r\n            </label>\r\n\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={yanzhengIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type=\"text\"\r\n                  maxLength={6}\r\n                  // placeholder={regtype === 'phone' && '短信验证码' || '邮箱验证码'}\r\n                  placeholder={PASSWORD.PLEASE_YZM}\r\n                  value={code}\r\n                  onChange={e => this.onInputChange(e, 'code')}\r\n                />\r\n              </div>\r\n\r\n              <span\r\n                style={!canGetCode && isGetSms && { opacity: '.5' } || {}}\r\n                className={`sms-code  ${!isGetSms ? `event-none` : ''}`}\r\n                onClick={this.getCode}>\r\n                {isGetSms ? PASSWORD.HQ_YANZHENGMA : <span>{`${count}s`}</span>}\r\n              </span>\r\n            </label>\r\n\r\n            {/* 密码 */}\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwType}\r\n                  value={password}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD}\r\n                  onChange={e => this.onInputChange(e, 'password')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwType, 'pwType')}\r\n              />\r\n            </label>\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwConfirmType}\r\n                  value={passwordConfirm}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD2}\r\n                  onChange={e => this.onInputChange(e, 'passwordConfirm')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwConfirmType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwConfirmType, 'pwConfirmType')}\r\n              />\r\n            </label>\r\n\r\n\r\n          </div>\r\n          <div className=\"btn-box\">\r\n            <Button\r\n              activeClassName=\"active\"\r\n              className=\"primary-button\"\r\n              disabled={!this.canSubmit() || !isSubmit}\r\n              // onClick={() => { this.props.history.push('/LookKey') }}>\r\n              onClick={this.onSubmit}>\r\n              {PASSWORD.OK}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default PasswordNew\r\n"],"sourceRoot":""}