{"version":3,"sources":["pages/login/PasswordNewOn.js"],"names":["PasswordNew","inject","observer","state","oldpassword","password","passwordConfirm","pwType","pwConfirmType","oldpwType","isSubmit","canSubmit","_this$state","_this","onInputChange","e","key","value","target","setState","Object","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","onSetType","currentType","type","onSubmit","_this$props","props","userM4DStore","history","REGISTER","localeStore","locale","_this$state2","getUserStatus","UserApi","editLoginpassword","open_id","openid","old_password","new_password","new_password_confirm","then","res","status","antd_mobile_lib_toast__WEBPACK_IMPORTED_MODULE_3___default","a","info","msg","mag","push","catch","PASSWORD_NOSAME","this","match","window","onresize","_this2","_this$props$localeSto","PASSWORD","_this$state3","react__WEBPACK_IMPORTED_MODULE_10___default","createElement","id","_components_partial_AccountHeader__WEBPACK_IMPORTED_MODULE_24__","className","XGDLMM","src","passwordIcon","placeholder","QSRYMM","onChange","openPwdImg","closePwdImg","alt","onClick","PLEASE_PASSWORD","PLEASE_PASSWORD2","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","activeClassName","disabled","OK","Component"],"mappings":"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","file":"static/js/81.23e586b1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Toast, Icon } from 'antd-mobile'\r\nimport { inject, observer } from 'mobx-react'\r\nimport Cookies from \"js-cookie\"\r\nimport { UserApi } from '../../api'\r\nimport { REG, TOAST_DURATION, COUNT_DOWN } from '../../utils/constants'\r\nimport { isEmail, isMobile, isNickName } from \"../../utils/reg\"\r\n// import { compatibleFixedButton, getQueryParam } from '../../utils/common'\r\n// import CaptchaM4D from '../../components/common/CaptchaM4D'\r\nimport openPwdImg from '../../assets/images/open-pwd-shen.png'\r\nimport closePwdImg from '../../assets/images/close-pwd-shen.png'\r\nimport userIcon from '../../assets/images/imeta/login/user.png'\r\nimport yanzhengIcon from '../../assets/images/imeta/login/yanzheng.png'\r\nimport telIcon from '../../assets/images/imeta/login/tel.png'\r\nimport passwordIcon from '../../assets/images/imeta/login/password.png'\r\nimport yaoqingIcon from '../../assets/images/imeta/login/yaoqing.png'\r\n\r\nimport './PasswordNew.scss'\r\nimport AccountHeader from \"../../components/partial/AccountHeader\";\r\nimport { Link } from 'react-router-dom'\r\n@inject('userM4DStore')\r\n@inject('localeStore')\r\n@observer\r\nclass PasswordNew extends Component {\r\n  state = {\r\n    oldpassword:'',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    pwType: 'password',\r\n    pwConfirmType: 'password',\r\n    oldpwType:'password',\r\n    isSubmit: true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.onresize = null\r\n  }\r\n\r\n\r\n  canSubmit = () => {\r\n    const {oldpassword, password, passwordConfirm } = this.state\r\n    return !!(oldpassword,password && passwordConfirm )\r\n  }\r\n\r\n  onInputChange = (e, key) => {\r\n    const { value } = e.target\r\n    // console.log(ke注册时候取消确认密码功能y)\r\n    // \r\n    // if (key === 'password') {\r\n    //   // console.log(key)\r\n    //   this.setState({\r\n    //     passwordConfirm: value\r\n    //   })\r\n    // }\r\n\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n\r\n  onSetType = (currentType, key) => {\r\n    const type = currentType === 'password' ? 'text' : 'password'\r\n    this.setState({ [key]: type })\r\n  }\r\n\r\n  onSubmit = () => {\r\n\r\n    const { userM4DStore, history } = this.props;\r\n    const { localeStore: { locale: { REGISTER } } } = this.props;\r\n    const {\r\n\r\n      password,\r\n      passwordConfirm,\r\n      oldpassword,\r\n    } = this.state;\r\n\r\n    if (password !== passwordConfirm) {\r\n      Toast.info(REGISTER.PASSWORD_NOSAME, 2)\r\n      return\r\n    }\r\n    this.setState({ isSubmit: false })\r\n    userM4DStore.getUserStatus()\r\n\r\n    UserApi.editLoginpassword({\r\n      open_id: userM4DStore.openid,\r\n      old_password:oldpassword,\r\n      new_password:  password,\r\n      new_password_confirm:  passwordConfirm,\r\n      // recommend_code: recommendCode\r\n    }).then(res => {\r\n      this.setState({ isSubmit: true })\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg, 2)\r\n        this.setState({ isSubmit: true,  })\r\n        // this.getCaptchaPng()\r\n        return\r\n      }\r\n      Toast.info(res.mag, 2,()=>{history.push('/mineList')})\r\n    }).catch(() => this.setState({ isSubmit: true }))\r\n  }\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const { localeStore: { locale: { REGISTER ,PASSWORD} } } = this.props;\r\n    const {\r\n      password,\r\n      passwordConfirm,//确认密码\r\n      pwType,\r\n      pwConfirmType,\r\n      isSubmit,\r\n      oldpassword,\r\n      oldpwType\r\n    } = this.state\r\n\r\n    return (\r\n      <div id=\"password\">\r\n        {/* <AccountLangHeader/> */}\r\n        <AccountHeader />\r\n        <div className='log_head'>\r\n          <h1>{PASSWORD.XGDLMM}</h1>\r\n        </div>\r\n\r\n\r\n        <div className='out_box'>\r\n          <div className=\"main-content\">\r\n\r\n          <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={oldpwType}\r\n                  value={oldpassword}\r\n                  placeholder={PASSWORD.QSRYMM}\r\n                  onChange={e => this.onInputChange(e, 'oldpassword')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={oldpwType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(oldpwType, 'oldpwType')}\r\n              />\r\n            </label>\r\n            {/* 密码 */}\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwType}\r\n                  value={password}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD}\r\n                  onChange={e => this.onInputChange(e, 'password')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwType, 'pwType')}\r\n              />\r\n            </label>\r\n            <label>\r\n              <div className='input-box'>\r\n                <img className={'icon-img'} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwConfirmType}\r\n                  value={passwordConfirm}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD2}\r\n                  onChange={e => this.onInputChange(e, 'passwordConfirm')}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwConfirmType === 'text' ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwConfirmType, 'pwConfirmType')}\r\n              />\r\n            </label>\r\n\r\n\r\n          </div>\r\n          <div className=\"btn-box\">\r\n            <Button\r\n              activeClassName=\"active\"\r\n              className=\"primary-button\"\r\n              disabled={!this.canSubmit() || !isSubmit}\r\n              // onClick={() => { this.props.history.push('/LookKey') }}>\r\n              onClick={this.onSubmit}>\r\n              {PASSWORD.OK}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default PasswordNew\r\n"],"sourceRoot":""}