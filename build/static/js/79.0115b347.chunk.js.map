{"version":3,"sources":["pages/login/OTCPassword.js"],"names":["OTCPassword","inject","observer","state","account_token","step","agree","nickname","preAccount","account","code","imgCode","password","passwordConfirm","recommendCode","showCaptchaPng","pwType","pwConfirmType","imgSrc","captcha","undefined","captchaKey","Date","count","COUNT_DOWN","isGetSms","showBtn","isSubmit","isSuccessToast","usertype","tel_num","canGetCode","canSubmit","_this2$state","_this2","onInputChange","e","key","value","target","setState","Object","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_6__","codeCountDown","timer","setInterval","clearInterval","getCode","_callee","userM4DStore","_this","_this2$state2","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","a","wrap","_context","prev","next","props","localeStore","locale","REGISTER","C_Users_15691_Desktop_gzxProject_imeta_front_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_11__","abrupt","isMobile","antd_mobile_lib_toast__WEBPACK_IMPORTED_MODULE_4___default","info","isEmail","type","then","res","status","msg","stop","onSetType","currentType","onSubmit","_this2$props","history","userInfo","_this2$state3","REG","EMAIL","test","MOBILE","PASSWORD","UserApi","editPaypassword","open_id","openid","phone","email","push","catch","PASSWORD_NOSAME","PASSWORD_LEAST","NUM_ERROR","this","_this$props","getUserStatus","getUserInfo","data","window","onresize","_this3","_this$props$localeSto","OTCPASSWORD","_this$state","react__WEBPACK_IMPORTED_MODULE_13___default","createElement","id","_components_partial_AccountHeader__WEBPACK_IMPORTED_MODULE_28__","className","MODIFY_PAY_PASSWORD","src","telIcon","emailIcon","placeholder","readOnly","yanzhengIcon","maxLength","PLEASE_YZM","onChange","style","opacity","concat","onClick","HQ_YANZHENGMA","passwordIcon","PLEASE_PASSWORD","openPwdImg","closePwdImg","alt","PLEASE_PASSWORD2","antd_mobile_lib_button__WEBPACK_IMPORTED_MODULE_1___default","activeClassName","disabled","OK","Component"],"mappings":"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","file":"static/js/79.0115b347.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Toast, Icon } from \"antd-mobile\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Cookies from \"js-cookie\";\r\nimport { UserApi } from \"../../api\";\r\nimport { REG, TOAST_DURATION, COUNT_DOWN } from \"../../utils/constants\";\r\nimport { isEmail, isMobile, isNickName } from \"../../utils/reg\";\r\n// import { compatibleFixedButton, getQueryParam } from '../../utils/common'\r\n// import CaptchaM4D from '../../components/common/CaptchaM4D'\r\nimport openPwdImg from \"../../assets/images/open-pwd-shen.png\";\r\nimport closePwdImg from \"../../assets/images/close-pwd-shen.png\";\r\nimport userIcon from \"../../assets/images/imeta/login/user.png\";\r\nimport yanzhengIcon from \"../../assets/images/imeta/login/yanzheng.png\";\r\nimport telIcon from \"../../assets/images/imeta/login/tel.png\";\r\nimport passwordIcon from \"../../assets/images/imeta/login/password.png\";\r\nimport yaoqingIcon from \"../../assets/images/imeta/login/yaoqing.png\";\r\nimport emailIcon from \"../../assets/images/imeta/login/email.png\";\r\n\r\nimport \"./OTCPassword.scss\";\r\nimport AccountHeader from \"../../components/partial/AccountHeader\";\r\nimport { Link } from \"react-router-dom\";\r\n@inject(\"userM4DStore\")\r\n@inject(\"localeStore\")\r\n@observer\r\nclass OTCPassword extends Component {\r\n  state = {\r\n    account_token: \"\",\r\n    step: 1, //创建钱包步骤\r\n    agree: false, //阅读并同意\r\n    nickname: \"\", //昵称\r\n    preAccount: \"\",\r\n    account: \"\",\r\n    code: \"\",\r\n    imgCode: \"\", //给个默认值\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    recommendCode: \"\",\r\n    showCaptchaPng: false,\r\n    pwType: \"password\",\r\n    pwConfirmType: \"password\",\r\n    imgSrc: \"\",\r\n    captcha: undefined,\r\n    captchaKey: +new Date(),\r\n    count: COUNT_DOWN,\r\n    isGetSms: true,\r\n    showBtn: true,\r\n    isSubmit: true,\r\n    isSuccessToast: false, //注册成功当Toast\r\n    usertype: \"email\", //注册方式\r\n    tel_num: \"\", //国家号\r\n    canGetCode: true, //获取验证码防止重复\r\n  };\r\n\r\n  componentDidMount() {\r\n    // const recommendCode = getQueryParam('recommendCode') || ''\r\n    // const { match } = this.props;\r\n    let _this = this;\r\n    const { history, userM4DStore } = this.props;\r\n    userM4DStore.getUserStatus();\r\n    // 获取个人信息\r\n    userM4DStore.getUserInfo({ open_id: userM4DStore.openid }).then((res) => {\r\n      if (res.status !== 1) {\r\n        Toast.info(res.msg, 2);\r\n        return;\r\n      }\r\n      // console.log(res.data.faqRe)\r\n      _this.setState({\r\n        userInfo: res.data,\r\n        account: res.data.phone || res.data.email || \"error\",\r\n        usertype: (res.data.phone && \"phone\") || \"email\",\r\n      });\r\n    });\r\n    // this.getCaptchaPng()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.onresize = null;\r\n  }\r\n\r\n  // getCaptchaPng = () => {\r\n  //   const key = +new Date()\r\n  //   UserApi.getCaptchaPng({ key }).then(res => {\r\n  //     this.setState({ captchaKey: key, imgSrc: res })\r\n  //   })\r\n  // }\r\n\r\n  canSubmit = () => {\r\n    const { account, code, password, passwordConfirm } = this.state;\r\n    return !!(account && code && password && passwordConfirm);\r\n  };\r\n\r\n  onInputChange = (e, key) => {\r\n    const { value } = e.target;\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  // onAccountBlur = e => {\r\n  //   let _this = this\r\n  //   const { value } = e.target\r\n  //   const { canGetCode, preAccount, account, regType, tel_num } = this.state\r\n  //   const { localeStore: { locale: { REGISTER } } } = this.props;\r\n  //   if (value !== preAccount) {\r\n  //     this.setState({ preAccount: value })\r\n  //     // this.getCaptchaPng()\r\n  //   }\r\n\r\n  //   if (!isMobile(account)) {\r\n  //     Toast.info('请输入正确的手机号', TOAST_DURATION)\r\n  //     return\r\n  //   }\r\n\r\n  //   // if (regType === 'email') {\r\n  //   //   if (!isEmail(account)) {\r\n  //   //     Toast.info(REGISTER.PLEASE_RIGHT_EMAIL, TOAST_DURATION, () => {\r\n  //   //       _this.setState({ account: '' })\r\n  //   //     })\r\n  //   //     return\r\n  //   //   }\r\n  //   // }\r\n\r\n  //   if (isMobile(account)) {\r\n  //     UserApi.phoneExist({ prefix: tel_num, phone: account }).then(res => {\r\n  //       if (res.status !== 1) {\r\n  //         Toast.info(res.msg, TOAST_DURATION)\r\n  //         _this.setState({\r\n  //           account: ''\r\n  //         })\r\n  //       }\r\n\r\n  //     })\r\n  //   }\r\n  //   if (isEmail(account)) {\r\n  //     UserApi.emailExist({ email: account }).then(res => {\r\n  //       if (res.status !== 1) {\r\n  //         Toast.info(res.msg, TOAST_DURATION)\r\n  //         _this.setState({\r\n  //           account: ''\r\n  //         })\r\n  //       }\r\n  //     })\r\n  //   }\r\n\r\n  // }\r\n\r\n  codeCountDown = () => {\r\n    let count = this.state.count;\r\n\r\n    this.timer = setInterval(() => {\r\n      if (count <= 0) {\r\n        this.setState({ isGetSms: true, count: COUNT_DOWN });\r\n        this.setState({ canGetCode: true });\r\n        clearInterval(this.timer);\r\n      } else {\r\n        this.setState({ isGetSms: false, count: count-- });\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  // 获取验证码\r\n  getCode = async () => {\r\n    const { userM4DStore } = this.props;\r\n    const {\r\n      localeStore: {\r\n        locale: { REGISTER },\r\n      },\r\n    } = this.props;\r\n    let _this = this;\r\n    const { canGetCode, account, captcha, imgCode, usertype } = this.state;\r\n    await _this.setState({ canGetCode: false });\r\n    if (!canGetCode) {\r\n      // console.log('正在获取')\r\n      return;\r\n    }\r\n    if (usertype === \"phone\") {\r\n      if (!isMobile(account)) {\r\n        Toast.info(\"请输入正确的手机号\", 1);\r\n        _this.setState({ canGetCode: true });\r\n        return;\r\n      }\r\n    }\r\n    if (usertype === \"email\") {\r\n      if (!isEmail(account)) {\r\n        Toast.info(\"请输入正确的邮箱\", 1);\r\n        _this.setState({ canGetCode: true });\r\n        return;\r\n      }\r\n    }\r\n    // if (!captcha) {\r\n    //   Toast.info(REGISTER.PLEASE_YANZHENGMA, 1)\r\n    //   _this.setState({ canGetCode: true })\r\n    //   return\r\n    // }\r\n    userM4DStore\r\n      .getCode({\r\n        // captcha,\r\n        account,\r\n        // prefix: tel_num,\r\n        type: \"editpaypassword\",\r\n      })\r\n      .then((res) => {\r\n        if (res.status !== 1) {\r\n          Toast.info(res.msg);\r\n          // this.getCaptchaPng()\r\n          _this.setState({ canGetCode: true });\r\n          // _this.setState({ isSubmit: true, code: '', captcha: '' })\r\n          return;\r\n        }\r\n        this.codeCountDown(); //开启计时\r\n      });\r\n  };\r\n\r\n  onSetType = (currentType, key) => {\r\n    const type = currentType === \"password\" ? \"text\" : \"password\";\r\n    this.setState({ [key]: type });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    const { userM4DStore, history, userInfo } = this.props;\r\n    const {\r\n      localeStore: {\r\n        locale: { REGISTER },\r\n      },\r\n    } = this.props;\r\n    const { account, code, password, passwordConfirm, usertype } = this.state;\r\n    if (!REG.EMAIL.test(account) && !REG.MOBILE.test(account)) {\r\n      Toast.info(REGISTER.NUM_ERROR, 2);\r\n      return;\r\n    }\r\n    if (!REG.PASSWORD.test(password)) {\r\n      Toast.info(REGISTER.PASSWORD_LEAST, 2);\r\n      return;\r\n    }\r\n    if (password !== passwordConfirm) {\r\n      Toast.info(REGISTER.PASSWORD_NOSAME, 2);\r\n      return;\r\n    }\r\n    this.setState({ isSubmit: false });\r\n\r\n    UserApi.editPaypassword({\r\n      open_id: userM4DStore.openid,\r\n      phone: (usertype === \"phone\" && account) || \"\",\r\n      email: (usertype === \"email\" && account) || \"\",\r\n      usertype,\r\n      code,\r\n      password,\r\n      passwordConfirm,\r\n    })\r\n      .then((res) => {\r\n        this.setState({ isSubmit: true });\r\n        if (res.status !== 1) {\r\n          Toast.info(res.msg, 2);\r\n          this.setState({ isSubmit: true, code: \"\" });\r\n          return;\r\n        }\r\n        Toast.info(\"修改成功\", 2, () => {\r\n          history.push(\"/mineList\");\r\n        });\r\n      })\r\n      .catch(() => this.setState({ isSubmit: true }));\r\n  };\r\n\r\n  render() {\r\n    const { history } = this.props;\r\n    const {\r\n      localeStore: {\r\n        locale: { REGISTER,OTCPASSWORD },\r\n      },\r\n    } = this.props;\r\n    const {\r\n      account, //手机号或者邮箱\r\n      code, //手机验证码\r\n      password,\r\n      passwordConfirm, //确认密码\r\n      pwType,\r\n      pwConfirmType,\r\n      count,\r\n      isGetSms,\r\n      // showSuccess,\r\n      // showBtn,\r\n      isSubmit,\r\n      canGetCode,\r\n      usertype,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div id=\"otc-password\">\r\n        {/* <AccountLangHeader/> */}\r\n        <AccountHeader />\r\n        <div className=\"log_head\">\r\n          <h1>{OTCPASSWORD.MODIFY_PAY_PASSWORD}</h1>\r\n        </div>\r\n\r\n        <div className=\"out_box\">\r\n          <div className=\"main-content\">\r\n            <label>\r\n              <div className=\"input-box\">\r\n                <img\r\n                  className={\"icon-img\"}\r\n                  src={(usertype === \"phone\" && telIcon) || emailIcon}\r\n                />\r\n\r\n                <input\r\n                  className={\"input-main\"}\r\n                  type=\"text\"\r\n                  value={account}\r\n                  placeholder={\"手机号\"}\r\n                  // disabled={true}\r\n                  readOnly={true}\r\n                  // onBlur={this.onAccountBlur}//失去焦点\r\n                  // onChange={(e) => this.onInputChange(e, \"account\")}\r\n                />\r\n              </div>\r\n            </label>\r\n\r\n            <label>\r\n              <div className=\"input-box\">\r\n                <img className={\"icon-img\"} src={yanzhengIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type=\"text\"\r\n                  maxLength={6}\r\n                  placeholder={\r\n                    // (usertype === \"phone\" && \"短信验证码\") || \"邮箱验证码\"\r\n                    OTCPASSWORD.PLEASE_YZM\r\n                  }\r\n                  value={code}\r\n                  onChange={(e) => this.onInputChange(e, \"code\")}\r\n                />\r\n              </div>\r\n\r\n              <span\r\n                style={(!canGetCode && isGetSms && { opacity: \".5\" }) || {}}\r\n                className={`sms-code  ${!isGetSms ? `event-none` : \"\"}`}\r\n                onClick={this.getCode}\r\n              >\r\n                {isGetSms ? OTCPASSWORD.HQ_YANZHENGMA : <span>{`${count}s`}</span>}\r\n              </span>\r\n            </label>\r\n\r\n            {/* 密码 */}\r\n            <label>\r\n              <div className=\"input-box\">\r\n                <img className={\"icon-img\"} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwType}\r\n                  value={password}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD}\r\n                  onChange={(e) => this.onInputChange(e, \"password\")}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwType === \"text\" ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwType, \"pwType\")}\r\n              />\r\n            </label>\r\n            <label>\r\n              <div className=\"input-box\">\r\n                <img className={\"icon-img\"} src={passwordIcon} />\r\n\r\n                <input\r\n                  className=\"input-main\"\r\n                  type={pwConfirmType}\r\n                  value={passwordConfirm}\r\n                  placeholder={REGISTER.PLEASE_PASSWORD2}\r\n                  onChange={(e) => this.onInputChange(e, \"passwordConfirm\")}\r\n                />\r\n              </div>\r\n\r\n              <img\r\n                className=\"eye-img\"\r\n                src={pwConfirmType === \"text\" ? openPwdImg : closePwdImg}\r\n                alt=\"睁眼闭眼\"\r\n                onClick={() => this.onSetType(pwConfirmType, \"pwConfirmType\")}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"btn-box\">\r\n            <Button\r\n              activeClassName=\"active\"\r\n              className=\"primary-button\"\r\n              disabled={!this.canSubmit() || !isSubmit}\r\n              // onClick={() => { this.props.history.push('/LookKey') }}>\r\n              onClick={this.onSubmit}\r\n            >\r\n              {OTCPASSWORD.OK}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OTCPassword;\r\n"],"sourceRoot":""}